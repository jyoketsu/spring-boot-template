name: Build and Deploy

on:
  workflow_dispatch: # 手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t demo-app:latest .

      - name: Save Docker image
        # run: docker save -o demo-app.tar demo-app:latest
        run: docker save demo-app:latest | gzip > demo-app.tar.gz

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Copy files to server
        run: |
          scp demo-app.tar.gz root@47.102.193.24:/home/docker-images/
          scp docker-compose.yml root@47.102.193.24:/home/projects/spring-boot-template/
          scp backup.sh restore.sh root@47.102.193.24:/home/projects/spring-boot-template/ && ssh root@47.102.193.24 "chmod +x /home/projects/spring-boot-template/{backup,restore}.sh"

      - name: Load image and restart services
        run: |
          ssh root@47.102.193.24 << EOF
            cd /home/docker-images/
            gzip -d demo-app.tar.gz
            docker load -i demo-app.tar
            cd /home/projects/spring-boot-template/
            docker compose down
            docker compose up -d
            docker image prune -f  # 清理无用镜像
            rm -f vue3-template.tar  # 新增清理tar文件
          EOF
